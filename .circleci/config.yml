version: 2.1

commands:
  prepare:
    steps:
      - checkout
      - run:
          name: Print env info
          command: uname -a
      - run:
          name: Update system package managers
          command: |
            if command -v apt-get >/dev/null 2>&1; then apt-get update --yes; fi
            if command -v apk >/dev/null 2>&1; then apk update --no-cache; fi
            if command -v yum >/dev/null 2>&1; then command -v dnf >/dev/null 2>&1 || yum install -y dnf; fi
  main:
    steps:
      - run: make bootstrap lint build test
      - run: make install DESTDIR="${HOME}"

workflows:
  version: 2
  test:
    jobs:
      - debian: { image: ubuntu:latest }
      - debian: { image: ubuntu:rolling }

      - debian: { image: debian:latest }
      - debian: { image: debian:stable }
      - debian: { image: debian:stable-slim }
      - debian: { image: debian:oldstable }
      - debian: { image: debian:oldstable-slim }

      - alpine: { tag: latest }
      - alpine: { tag: edge }

      - redhat: { tag: fedora:latest }
      - redhat: { tag: centos:latest }

jobs:
  debian:
    parameters:
      image:
        type: string
    docker:
      - image: "<< parameters.image >>"
    steps:
      - prepare
      - run: apt-get install --yes build-essential curl python3 python3-pip python3-venv python3-setuptools upx
      - run: curl -sL https://deb.nodesource.com/setup_13.x | bash - && apt-get install --yes nodejs
      - main
  alpine:
    parameters:
      tag:
        type: string
    docker:
      - image: "alpine:<< parameters.tag >>"
    steps:
      - prepare
      - run: apk add --no-cache alpine-sdk bash nodejs npm python3 python3-dev py3-virtualenv upx
      - run: make bootstrap lint src-test install-test # TODO: `make build` on alpine
      - run: make install DESTDIR="${HOME}"
  redhat:
    parameters:
      image:
        type: string
    docker:
      - image: "<< parameters.image >>"
    steps:
      - prepare
      - run: dnf install -y gcc-c++ make findutils python3 python3-pip python3-setuptools sudo
      - run: dnf install -y upx || true
      - run: curl -sL https://rpm.nodesource.com/setup_13.x | sudo -E bash - && dnf install -y nodejs
      - main
