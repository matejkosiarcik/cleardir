version: 2.1

commands:
  prepare:
    steps:
      - checkout
      - run:
          name: Print env info
          command: uname -a
      - run:
          name: Update system package managers
          command: |
            if command -v apt-get >/dev/null 2>&1; then apt-get update --yes; fi
            if command -v apk >/dev/null 2>&1; then apk update --no-cache; fi
            if command -v yum >/dev/null 2>&1; then command -v dnf >/dev/null 2>&1 || yum install -y dnf; fi
  main:
    steps:
      - run: make all
      - run: make install DESTDIR="${HOME}"
  unit:
    steps:
      - run: make unit
      - run: make install DESTDIR="${HOME}"

workflows:
  version: 2
  test:
    jobs:
      - azlint
      - debian: { matrix: { parameters: { base: [ ubuntu ], tag: [ latest, rolling, "16.04", "18.04", "20.04" ] }}}
      - debian: { matrix: { parameters: { base: [ debian ], tag: [ latest, stable, stable-slim, oldstable, oldstable-slim ] }}}
      - debian: { matrix: { parameters: { base: [ elementary/docker ], tag: [ stable ] }}}
      - alpine: { matrix: { parameters: { tag: [ latest, edge, "3.11", "3.10" ] }}}
      - fedora: { tag: latest }
      - python3: { matrix: { parameters: { tag: [ rc, "3", "3.8", "3.7", "3.6", "3.5", "3.4" ] }}}

jobs:
  azlint:
    docker:
      - image: matejkosiarcik/azlint:latest
    steps:
      - checkout
      - setup_remote_docker
      - run: azlint

  debian:
    parameters:
      base:
        type: string
      tag:
        type: string
    docker:
      - image: "<< parameters.base >>:<< parameters.tag >>"
    steps:
      - prepare
      - run: apt-get install --yes build-essential curl python3 python3-pip python3-venv python3-setuptools upx
      - run: curl -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install --yes nodejs
      - main

  alpine:
    parameters:
      tag:
        type: string
    docker:
      - image: "alpine:<< parameters.tag >>"
    steps:
      - prepare
      - run: apk add --no-cache alpine-sdk bash nodejs npm python3 python3-dev py3-virtualenv upx
      - unit # TODO: build on alpine

  fedora:
    parameters:
      tag:
        type: string
    docker:
      - image: "fedora:<< parameters.tag >>"
    steps:
      - prepare
      - run: dnf install -y gcc-c++ make findutils python3 python3-pip python3-setuptools sudo upx
      - run: curl -sL https://rpm.nodesource.com/setup_14.x | sudo -E bash - && dnf install -y nodejs
      - main

  python3:
    parameters:
      tag:
        type: string
    docker:
      - image: "python:<< parameters.tag >>-slim"
    steps:
      - prepare
      - run: apt-get install --yes build-essential curl
      - run: curl -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install --yes nodejs
      - unit
